name: Build and Test Workflow 

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
    types: [opened, synchronize, reopened]

jobs:
  install:
    name: üì• Install Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm install

  test:
    name: üß™ Run Tests
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test
      - name: Cache coverage
        uses: actions/cache@v4
        with:
          path: coverage
          key: ${{ runner.os }}-coverage-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-coverage-

  sonarcloud-main:
    name: üê≥ Main Branch - SonarCloud
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm install
      - name: Restore coverage cache
        uses: actions/cache@v4
        with:
          path: coverage
          key: ${{ runner.os }}-coverage-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-coverage-
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.3.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Mark as skipped (main)
        if: ${{ ! (github.ref == 'refs/heads/main') }}
        run: echo "Skipped main branch scan."

  sonarcloud-main-finish:
    name: ‚úÖ Main branch scan finished
    runs-on: ubuntu-latest
    needs: sonarcloud-main
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Echo main branch scan finished
        run: echo "Main branch scan finished"

  sonarcloud-feature:
    name: üê≥ Feature Branch - SonarCloud
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/heads/feature/')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm install
      - name: Restore coverage cache
        uses: actions/cache@v4
        with:
          path: coverage
          key: ${{ runner.os }}-coverage-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-coverage-
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.3.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Mark as skipped (feature)
        if: ${{ ! startsWith(github.ref, 'refs/heads/feature/') }}
        run: echo "Skipped feature branch scan."

  sonarcloud-feature-finish:
    name: ‚úÖ Feature branch scan finished
    runs-on: ubuntu-latest
    needs: sonarcloud-feature
    if: startsWith(github.ref, 'refs/heads/feature/')
    steps:
      - name: Echo feature branch scan finished
        run: echo "Feature branch scan finished"

  sonarcloud-pr:
    name: üê≥ Pull Request - SonarCloud
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm install
      - name: Restore coverage cache
        uses: actions/cache@v4
        with:
          path: coverage
          key: ${{ runner.os }}-coverage-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-coverage-
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.3.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Mark as skipped (pr)
        if: ${{ github.event_name != 'pull_request' }}
        run: echo "Skipped PR scan."

  sonarcloud-pr-finish:
    name: ‚úÖ Pull Request scan finished
    runs-on: ubuntu-latest
    needs: sonarcloud-pr
    if: github.event_name == 'pull_request'
    steps:
      - name: Echo PR scan finished
        run: echo "PR scan finished"
